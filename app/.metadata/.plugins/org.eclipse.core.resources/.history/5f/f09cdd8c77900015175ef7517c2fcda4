package marche_halibaba_clients;

import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.security.spec.InvalidKeySpecException;

import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;

public class PasswordHash {
	
	private static final String HASH_ALGORITHM = "PBKDF2WithHmacSHA1";

	private static final int ITERATIONS_NBR = 25;
	private static final int SALT_SIZE = 34;
	private static final int HASH_SIZE = 216;
	
	public static String createHash(String password) throws NoSuchAlgorithmException, InvalidKeySpecException {
		
		byte[] salt = generateRandomSalt();
		PBEKeySpec keySpec = new PBEKeySpec(password.toCharArray(), salt, ITERATIONS_NBR, HASH_SIZE);
        SecretKeyFactory secretKeyfactory = SecretKeyFactory.getInstance(HASH_ALGORITHM);
        byte[] hash = secretKeyfactory.generateSecret(keySpec).getEncoded();
        
		return ITERATIONS_NBR + new String(salt) + ":" + new String(hash);
	}
	
	private static byte[] generateRandomSalt() {
		SecureRandom random = new SecureRandom();
        byte[] salt = new byte[SALT_SIZE];
        random.nextBytes(salt);
        return salt;
	}

}
