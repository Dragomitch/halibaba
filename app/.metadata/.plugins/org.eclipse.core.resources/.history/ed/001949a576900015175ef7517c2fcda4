package marche_halibaba_clients;

import java.security.SecureRandom;

import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;

public class PasswordHash {
	
	private static final String HASH_ALGORITHM = "PBKDF2WithHmacSHA1";

	private static final int ITERATIONS_NBR = 25;
	private static final int SALT_SIZE = 36;
	private static final int HASH_SIZE = 216;
	
	public static String createHash(String password) {
		
		
		
		PBEKeySpec keySpec = new PBEKeySpec(password.toCharArray(), , ITERATIONS, SIZE);
		//PBEKeySpec spec = new PBEKeySpec(str, SALT, ITERATIONS, SIZE * 8);
        SecretKeyFactory skf = SecretKeyFactory.getInstance(PBKDF2_ALGORITHM);
        
        return skf.generateSecret(spec).getEncoded();
		
		return "";
	}
	
	private static byte[] generateRandomSalt() {
		
		SecureRandom random = new SecureRandom();
        byte[] salt = new byte[SALT_SIZE];
        random.nextBytes(salt);
        
        return salt;
	}

}
